"----------------------------------------------------
"" 基本的な設定
"----------------------------------------------------
"" viとの互換性をとらない(vimの独自拡張機能を使う為)
set nocompatible
" 改行コードの自動認識
set fileformats=unix,dos,mac
" " ビープ音を鳴らさない
set vb t_vb=
" " バックスペースキーで削除できるものを指定
" " indent  : 行頭の空白
" " eol     : 改行
" " start   : 挿入モード開始位置より手前の文字
set backspace=indent,eol,start
" 整形オプション,マルチバイト系を追加
set formatoptions+=m
" "----------------------------------------------------
" " バックアップ関係
" "----------------------------------------------------
" " バックアップをとらない
set nobackup
" " ファイルの上書きの前にバックアップを作る
" " (ただし、backup
" がオンでない限り、バックアップは上書きに成功した後削除される)
"set writebackup
" " バックアップをとる場合
" "set backup
" " バックアップファイルを作るディレクトリ
" "set backupdir=~/backup
" " スワップファイルを作るディレクトリ
set directory=/tmp
"
" "----------------------------------------------------
" " 検索関係
" "----------------------------------------------------
" " コマンド、検索パターンを100個まで履歴に残す
set history=200
" " 検索の時に大文字小文字を区別しない
set ignorecase
" " 最後まで検索したら先頭に戻る
set wrapscan
nmap <Esc><Esc> :nohlsearch<CR><Esc>
" "----------------------------------------------------
" " 表示関係
" "----------------------------------------------------
" " タイトルをウインドウ枠に表示する
set title
" " 行番号を表示しない
set number
" " ルーラーを表示
set ruler
" " タブ文字を CTRL-I で表示し、行末に $ で表示する
set list
" " 入力中のコマンドをステータスに表示する
set showcmd
" " ステータスラインを常に表示
set laststatus=2
" " 括弧入力時の対応する括弧を表示
set showmatch
" " 対応する括弧の表示時間を2にする
" set matchtime=2
" " シンタックスハイライトを有効にする
syntax on
" " 検索結果文字列のハイライトを有効にする
set hlsearch
" " コメント文の色を変更
" highlight Comment ctermfg=DarkCyan
" " コマンドライン補完を拡張モードにする
set wildmenu
set wildmode=list:full
"
" " 入力されているテキストの最大幅
" "
" (行がそれより長くなると、この幅を超えないように
" 空白の後で改行される)を無効にする
" set textwidth=0
" " ウィンドウの幅より長い行は折り返して、次の行に続けて表示する
set wrap
"
" " 全角スペースの表示
highlight ZenkakuSpace cterm=underline ctermfg=lightblue guibg=darkgray
 match ZenkakuSpace /　/
"
" " ステータスラインに表示する情報の指定
 set statusline=%n\:%y%F\
 \|%{(&fenc!=''?&fenc:&enc).'\|'.&ff.'\|'}%m%r%=<%l/%L:%p%%>
" ステータスラインの色
 highlight StatusLine   term=NONE cterm=NONE ctermfg=black ctermbg=white
"
"----------------------------------------------------
" インデント
"----------------------------------------------------
set autoindent
" タブを半角スペースに展開
set expandtab
" シフト移動幅
set shiftwidth=4

set softtabstop=4
" <Tab>が対応するスペースの数
set tabstop=4
" 高度な自動インデント
set smartindent
" 行頭の空白内で<Tab>を打ち込むとshiftwidthの数だけインデントする
set smarttab

set cindent

" インデントをshiftwidthの倍数に丸める
set shiftround

" "----------------------------------------------------
" " 国際化関係
" "----------------------------------------------------
" " 文字コードの設定
" " fileencodingsの設定ではencodingの値を一番最後に記述する
set encoding=utf-8
set termencoding=utf-8
set fileencoding=utf-8
set fileencodings=ucs-bom,euc-jp,cp932,iso-2022-jp
set fileencodings+=,ucs-2le,ucs-2,utf-8,sjis

"----------------------------------------------------
" その他
"----------------------------------------------------
"" バッファを切替えてもundoの効力を失わない
set hidden
" 起動時のメッセージを表示しない
set shortmess+=I

"----------------------------------------------------
" key mapping 
"----------------------------------------------------
"
nmap ; :
nmap ,w :x<CR>
nmap ,w :x<CR>
silent! nmap <unique> ,r <Plug>(quickrun)
map sp :r! pbpaste<CR>
nnoremap sc :call system("pbcopy", @0)<CR>

augroup BufferAu
    autocmd!
    " カレントディレクトリを自動的に移動
    autocmd BufNewFile,BufRead,BufEnter * if isdirectory(expand("%:p:h")) && bufname("%") !~ "NERD_tree" | cd %:p:h | endif
augroup END


"----------------------------------------------------
" File type
"----------------------------------------------------
"au FileType java :setlocal omnifunc=javacomplete#Complete
"au FileType java :setlocal completefunc=javacomplete#CompleteParamsInfo
au FileType php :set dict=~/.vim/dict/php.dict
au FileType c :set dict=~/.vim/dict/c.dict

"----------------------------------------------------
" HTML
"setlocal omnifunc=syntaxcomplete#Complete
autocmd FileType html set omnifunc=htmlcomplete#CompleteTags
autocmd FileType css set omnifunc=csscomplete#CompleteCSS
autocmd FileType xml set omnifunc=xmlcomplete#CompleteTags
autocmd FileType php set omnifunc=phpcomplete#CompletePHP

" 文字コードの自動認識
if &encoding !=# 'utf-8'
  set encoding=japan
  set fileencoding=japan
endif
if has('iconv')
  let s:enc_euc = 'euc-jp'
  let s:enc_jis = 'iso-2022-jp'
  " iconvがeucJP-msに対応しているかをチェック
  if iconv("\x87\x64\x87\x6a", 'cp932', 'eucjp-ms') ==# "\xad\xc5\xad\xcb"
    let s:enc_euc = 'eucjp-ms'
    let s:enc_jis = 'iso-2022-jp-3'
  " iconvがJISX0213に対応しているかをチェック
  elseif iconv("\x87\x64\x87\x6a", 'cp932', 'euc-jisx0213') ==# "\xad\xc5\xad\xcb"
    let s:enc_euc = 'euc-jisx0213'
    let s:enc_jis = 'iso-2022-jp-3'
  endif
  " fileencodingsを構築
  if &encoding ==# 'utf-8'
    let s:fileencodings_default = &fileencodings
    let &fileencodings = s:enc_jis .','. s:enc_euc .',cp932'
    let &fileencodings = &fileencodings .','. s:fileencodings_default
    unlet s:fileencodings_default
  else
    let &fileencodings = &fileencodings .','. s:enc_jis
    set fileencodings+=utf-8,ucs-2le,ucs-2
    if &encoding =~# '^\(euc-jp\|euc-jisx0213\|eucjp-ms\)$'
      set fileencodings+=cp932
      set fileencodings-=euc-jp
      set fileencodings-=euc-jisx0213
      set fileencodings-=eucjp-ms
      let &encoding = s:enc_euc
      let &fileencoding = s:enc_euc
    else
      let &fileencodings = &fileencodings .','. s:enc_euc
    endif
  endif
  " 定数を処分
  unlet s:enc_euc
  unlet s:enc_jis
endif
" 日本語を含まない場合は fileencoding に encoding を使うようにする
if has('autocmd')
  function! AU_ReCheck_FENC()
    if &fileencoding =~# 'iso-2022-jp' && search("[^\x01-\x7e]", 'n') == 0
      let &fileencoding=&encoding
    endif
  endfunction
  autocmd BufReadPost * call AU_ReCheck_FENC()
endif
" 改行コードの自動認識
set fileformats=unix,dos,mac
" □とか○の文字があってもカーソル位置がずれないようにする
if exists('&ambiwidth')
  set ambiwidth=double
endif

"----------------------------------------------------
" current line highlight
"----------------------------------------------------
nnoremap <silent> ,ha :HighlightCurrentLine Search<cr>
nnoremap <silent> ,hb :HighlightCurrentLine DiffAdd<cr>
nnoremap <silent> ,hc :HighlightCurrentLine Error<cr>
command! -nargs=1 HighlightCurrentLine execute 'match <args> /<bslash>%'.line('.').'l/'

nnoremap <silent> ,H :UnHighlightCurrentLine<cr>
command! -nargs=0 UnHighlightCurrentLine match


"----------------------------------------------------
" gtags
"----------------------------------------------------
map <C-g> :Gtags 
map <C-i> :Gtags -f %<CR>
"map <C-j> :GtagsCursor<CR>
map <C-n> :cn<CR>
map <C-p> :cp<CR>


autocmd BufNewFile,BufRead */konoha/* setlocal noexpandtab 
"au BufRead,BufNewFile *.go setf go
function! GnuIndent()
setlocal cinoptions=>4,n-2,{2,^-2,:2,=2,g0,h2,p5,t0,+2,(0,u0,w1,m1
setlocal shiftwidth=2
setlocal tabstop=8
endfunction
autocmd BufNewFile,BufRead */gcc/*  call GnuIndent() 


let g:changelog_timeformat = "%Y-%m-%d"
let g:changelog_username = "masa <imasahiro9@gmail.com>"

au! BufRead,BufNewFile Todo.txt      setfiletype changelog

